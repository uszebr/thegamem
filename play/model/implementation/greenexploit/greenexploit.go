package greenexploit

import (
	"github.com/uszebr/thegamem/play/model"
	"github.com/uszebr/thegamem/play/signal"
)

const (
	modelName   = "greenexploit"
	description = "Starts with Green. 2 next interactions reply with coping oponent signal;  After 3 interactions checkes if oponent is AlwaysGreen. If yes responce with Red. Else response with two Green and then copy oponent signal. "
	iconPath    = "/static/image/icon/shrimp.svg"
)

type ModGreenExploit struct{}

func (greenexploit ModGreenExploit) GetModel() model.Model {
	action := func(myHistory []signal.Signal, opponentHistory []signal.Signal, approximateInteractions int) signal.Signal {
		if len(opponentHistory) == 0 {
			return signal.Green
		}
		if len(opponentHistory) < 3 {
			return opponentHistory[len(opponentHistory)-1]
		}
		if isAlwaysGreen(opponentHistory) {
			return signal.Red
		}
		if myHistory[len(myHistory)-1] == signal.Green && myHistory[len(myHistory)-2] == signal.Green {
			return opponentHistory[len(opponentHistory)-1]
		}
		return signal.Green
	}
	return model.New(modelName, description, iconPath, action)
}

func isAlwaysGreen(opponentHistory []signal.Signal) bool {
	for _, s := range opponentHistory {
		if s == signal.Red {
			return false
		}
	}
	return true
}
